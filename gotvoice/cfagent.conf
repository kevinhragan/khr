##################  
# cfagent.conf
##################

groups:
    cfengine_server = ( newpop2.gotvoice.com )
    spooler = ( anubis heket isis karnac mango nekhebet ramses seth spool1 shu tefnut thoth uadjet waipahu )
    production = ( anubis cairo carrot cherry fig hathor heket horus kale khufu mail mango nekhebet nile nun onion parsley potato ra ramses server1 seth shu spool1 uadjet waipahu )
    admin = ( atum icecream intns mail newpop2 nagios nut osiris osiris2 osiris3 seadev4 ) 
    test = ( !production.!admin )
    web = ( ammut cherry fig peach parsley ra spool1 horus ) 
    greetings = ( mango seth )
    asterisk = ( parsley nile nun )
    nagios = ( seadev4 )
    slackware = ( '/usr/bin/test -f /etc/slackware-version' )	
    sw_raid = ( anubis cairo isis khufu karnac mail nile ra ramses cherry )
    no_raid = ( 808 ammut atum bean bes butter cheddar gvinst hawaii-test icecream intns bean hawaii mango newpop2 osiris pepper parsley potato seadev2 seadev4 waianae wailua waimanalo waipahu )
    3ware_raid_64 = ( hathor )
    3ware_raid = ( !sw_raid&!no_raid&!3ware_raid_64 )
    hawaii_peers = ( 10_98_1 cairo )

control:
    domain = ( gotvoice.com )
    AddInstallable = ( aliases_edit )
    server = ( newpop2.gotvoice.com )
    distroot = ( /dist )
    perlroot = ( /dist/src/gvadmin/modules/GotVoice )
    smtpserver = ( mail.gotvoice.com )
    sysadm     = ( root@gotvoice.com )
    EmailMaxLines = ( 1000 )
    OutputPrefix = ( "!" )
    DPKGInstallCommand = ( "/usr/bin/aptitude install %s" )
    actionsequence = ( directories copy files editfiles disable shellcommands links tidy processes )

# the "test_spooler" def below doesn't seem to be in use
    production::
        spooler_dir = ( spooler )
    isis|tefnut|thoth::
        spooler_dir = ( test_spooler )
    SuSE::
        cronroot = ( /var/spool/cron/tabs )
	aliases = ( /etc/aliases )
        workdir = ( /var/cfengine )
    debian::
        cronroot = ( /var/spool/cron/crontabs )
	aliases = ( /etc/aliases )
        workdir = ( /var/lib/cfengine2 )
    slackware::
        cronroot = ( /var/spool/cron/crontabs )
	aliases = ( /etc/mail/aliases )
        workdir = ( /var/cfengine )

#### cfengine boss checks that clients connect regularly
alerts:
    cfengine_server::
        FriendStatus(1)
    
################################
# create client directories
################################

directories:

    ##################################
    # everybody gets /dist
    ##################################

    ra|kale|nile|spooler::
	/dist
	/dist/src

    spooler::
	/dist/reports
	/var/gv/spool/logs/metrics

    ###################################
    # destination dir for src
    # for GV webservers
    ###################################

    ra::
	/dist/src/gvadmin/modules/GotVoice
	/dist/src/thirdparty

################################
# get files from the bitserver
################################

copy:
    $(distroot)/root/.bashrc 
              				    	dest=/root/.bashrc
   						backup=false
						server=${server}

    $(distroot)/home/kevinr/.bashrc 
              				    	dest=/home/kevinr/.bashrc
   						backup=false
						server=${server}
						o=kevinr
						g=100

    # asterisk rotation on slackware
    asterisk.slackware::
    $(distroot)/etc/logrotate.d/asterisk	dest=/etc/logrotate.d/asterisk
						backup=false
						server=${server}

    # web rotation on slackware
    ra::
    $(distroot)/etc/logrotate.d/apache-mail	dest=/etc/logrotate.d/apache
						backup=false
						server=${server}

    web.slackware.!ra::
    $(distroot)/etc/logrotate.d/apache-rotate	dest=/etc/logrotate.d/apache
						backup=false
						server=${server}

    # raid
    3ware_raid::
    $(distroot)/usr/local/sbin/tw_cli	dest=/usr/local/sbin/tw_cli
						backup=false
						server=${server}
						o=root

    3ware_raid_64::
    $(distroot)/usr/local/sbin/tw_cli_64	dest=/usr/local/sbin/tw_cli
						backup=false
						server=${server}
						o=root
    
######## Nrpe setup #########

    slackware::
    $(distroot)/etc/nrpe.cfg
						dest=/etc/nrpe.cfg
						backup=false
						server=${server}
						o=root
						define=update_nrpe

    $(distroot)/usr/local/nagios/nrpe_plugins	dest=/usr/local/nagios/libexec
 						backup=false
						server=${server}
						o=root
						recurse=1
						inform=false

    debian::
    # different source file than slackware
    $(distroot)/etc/nagios/nrpe_local.cfg
						dest=/etc/nagios/nrpe_local.cfg
						backup=false
						server=${server}
						o=root
						define=update_nrpe

     # source dir is the same as slackware
    $(distroot)/usr/local/nagios/nrpe_plugins	dest=/usr/lib/nagios/plugins
 						backup=false
						server=${server}
						o=root
						recurse=1
						inform=false

    ##############################
    # generic sys config files
    ##############################


    # all the seattle, kirkland nets

    10_92_1::

    $(distroot)/etc/resolv.conf.kirk		dest=/etc/resolv.conf
                                        	backup=false
                                        	server=${server}
						force=true
						o=root
   
    10_96_1::

    $(distroot)/etc/resolv.conf.colo		dest=/etc/resolv.conf
                                        	backup=false
                                        	server=${server}
						force=true
						o=root
						g=root

    10_97_1::

    $(distroot)/etc/resolv.conf.colo2		dest=/etc/resolv.conf
                                        	backup=false
                                        	server=${server}
						force=true
						o=root
   
    10_98_1::

    $(distroot)/etc/resolv.conf.test		dest=/etc/resolv.conf
                                        	backup=false
                                        	server=${server}
						force=true
						o=root
   
# the hawaii nets, internal and dmz
    10_44_50|10_44_1::

    $(distroot)/etc/resolv.conf.haw		dest=/etc/resolv.conf
                                        	backup=false
                                        	server=${server}
						force=true
						o=root
   
    production.slackware::

    $(distroot)/etc/hosts			dest=/etc/hosts
                                        	backup=false
                                        	server=${server}
						o=root
						g=root

    slackware::

    $(distroot)/etc/logrotate.conf		dest=/etc/logrotate.conf
                                        	backup=false
                                        	server=${server}
						o=root
						g=root


    ######################################
    # shared by all webservers
    ######################################


	$(distroot)/webapp/thirdparty/apg-2.2.3
						dest=/dist/src/thirdparty/apg-2.2.3
                                        	recurse=inf
                                        	backup=false
                                        	server=${server}
						o=root
						g=root

    ####################################
    # spooler files
    ####################################


    spooler.production::
	$(distroot)/spooler/reports		dest=/dist/reports
                                        	recurse=inf
                                        	ignore=CVS
                                        	backup=false
                                        	server=${server}
						o=root
						g=users

	$(distroot)/dist/crontab.txt		dest=/dist/crontab.txt
                                       		backup=false
                                       		server=${server}
						o=root
						g=users

# lucas' report scripts

	$(distroot)/usr/local/bin		dest=/usr/local/bin
						backup=false
						server=${server}
						recurse=1
						
    spooler.!karnac::
	${distroot}/etc/rsync.password
						dest=/etc/rsync.password
						mode=400
						backup=false
                          			server=${server}
						o=root
						encrypt=true

	$(distroot)/$(spooler_dir)/callerid	dest=/var/gv/lib
                                        	recurse=inf
                                        	backup=false
                                        	server=${server}
						o=gv
						g=users

	$(distroot)/$(spooler_dir)/snicutlib	dest=/var/gv/snicutlib
                                        	recurse=inf
                                        	backup=false
                                        	server=${server}
						o=gv
						g=users

    ####################################################
    # copy the keys over so the spoolers can
    # copy reports via scp
    ####################################################

	$(distroot)/home/gv/.ssh/id_dsa		dest=/home/gv/.ssh/id_dsa
                                        	backup=false
                                        	server=${server}
						o=gv
						g=users

	$(distroot)/home/gv/.ssh/id_dsa.pub	dest=/home/gv/.ssh/id_dsa.pub
                                        	backup=false
                                        	server=${server}
						o=gv
						g=users

    #####################################
    # config files for national spoolers
    #####################################

production.spooler.!greetings::
	$(distroot)/$(spooler_dir)/national/spool		dest=/var/gv/spool
							recurse=inf
                                        		backup=false
                                        		server=${server}
							o=gv
							g=users

 
    #####################################
    # config files for greetings spoolers
    #####################################

production.spooler.greetings::
	$(distroot)/$(spooler_dir)/greetings/spool		dest=/var/gv/spool
							recurse=inf
                                        		backup=false
                                        		server=${server}
							o=gv
							g=users

 
   ##### password editing ####

    production::
	$(distroot)/etc/shadow_production		dest=/tmp/shadow
							backup=false
							mode=600
							server=$(server)
							o=root
    admin::
	$(distroot)/etc/shadow_admin			dest=/tmp/shadow    
							backup=false
							mode=600
							server=$(server)
							o=root

    test::
	$(distroot)/etc/shadow_test			dest=/tmp/shadow    
							backup=false
							mode=600
							server=$(server)
							o=root

    # ammut exluded so test users can be root.  Could rewrite this so entries were edited in instead of copying whole file.
    any.!ammut::
	$(distroot)/etc/sudoers				dest=/etc/sudoers    
							backup=false
							mode=440
							server=$(server)
							o=root

#############################
# set file permissions
#############################

files:
    
    #### this helps to prove rsync backups are really running
    /etc/marker action=touch mode=444

    ###################################
    # rc.inetd got -x on anubis once...
    ###################################
    slackware::
	/etc/rc.d/rc.inetd			mode=0755
						action=fixall

    ############################################
    # gv needs to own /usr/local/bin on spoolers
    ############################################
    spooler::
	/usr/local/bin 				owner=gv
						group=users
						recurse=inf
						action=fixall

	/var/gv/spool/logs/metrics		owner=gv
						group=users
						recurse=inf
						action=fixall

        #######################################
        # copied id_dsas need to be mode 600
        #######################################
	/home/gv/.ssh/id_dsa			owner=gv
						group=users
						mode=0600
						action=fixall

	################################
	# some files need to be setuid
	################################
	/usr/local/bin/gvspool			owner=gv
						group=users
						mode=u=srwx,g+srx
						action=fixall

	/usr/local/bin/gvloadtones		owner=gv
						group=users
						mode=u=srwx,g+srx
						action=fixall

	/usr/local/bin/gvjob			owner=gv
						group=users
						mode=u=srwx,g+srx
						action=fixall

	/var/gv/spool/logs/metrics		owner=gv
						group=users

links:
    slackware::
    # link makes it easier to have one crontab entry for all hosts
    /usr/sbin/cfexecd -> /usr/local/sbin/cfexecd
    # cfexecd seems to expect cfagent here
    /var/cfengine/bin/cfagent -> /usr/local/sbin/cfagent
    /usr/bin/sar -> /usr/local/bin/sar

#############################
# run shell commands
#############################

shellcommands:

    # Make a key for doing backup with       
    "/usr/bin/test -f /root/.ssh/backup_key || /usr/bin/ssh-keygen -t rsa -N '' -f /root/.ssh/backup_key"

    # hourly check of hardware raid
    (3ware_raid|3ware_raid_64).Q1::
    "/usr/local/sbin/tw_cli /c0/u0 show status | /usr/bin/awk 'NR==1 && ! /= OK/'"
    potato.Q1::
    "/usr/local/sbin/tw_cli /c7/u0 show status | /usr/bin/awk 'NR==1 && ! /= OK/'"

    # shrink mtu so big data copies to hawaii is not slow
    # this is a hack but it works
    hawaii_peers::
    "/sbin/ifconfig eth0 mtu 1400"

    !karnac.spooler::
    ##### do a big sync for the spoolers ####
    ## first the sng files
    "/usr/bin/rsync -az --include '*sng' --include '/*/' --exclude '*' --password-file=/etc/rsync.password newpop2::dist/$(spooler_dir)/services/ /var/gv/spool/services"
     ## everything else
    "/usr/bin/rsync -az --exclude '*sng' --exclude '*wav' --exclude CVS  --password-file=/etc/rsync.password newpop2::dist/$(spooler_dir)/services/ /var/gv/spool/services"

    aliases_edit::
    "/usr/sbin/sendmail -bi"

    update_nrpe.slackware::
    "/usr/bin/pkill nrpe; /usr/sbin/nrpe -c /etc/nrpe.cfg -d"

    update_nrpe.debian::
    "/etc/init.d/nagios-nrpe-server restart"

    #### sync the hardware clock to the system clock weekly 
    ### fails on some systems (?) without --directisa
    Sunday.Hr00_Q1::
    "/sbin/hwclock --directisa --systohc"

    ## backup commands to run: can these be neatened up using variables?
    ## don't make too much of the scedule and which hosts run when

    (ammut|anubis).!Sunday.Hr00_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local atum:/var/gvbackup/$(host)"

    (atum).!Sunday.Hr00_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

### 
    # backup to ibackup
    #atum.Sunday.(Day1|Day2|Day3|Day4|Day5|Day6|Day7).Hr02_Q3::
    #"/bin/date
    #/usr/bin/rsync -ae /var/gvbackup gotvoice@rsync.ibackup.com::ibackup

    nut.!Sunday.Hr00_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/www/mrtg atum:/var/gvbackup/$(host)"

    hathor.!Sunday.Hr01_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    # lots of stuff in /var/gv this is a big one
    icecream.!Sunday.Hr01_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/gv /var/lib/mysql atum:/var/gvbackup/$(host)"

    (intns|karnac|mail).!Sunday.Hr02_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    newpop2.!Sunday.Hr02_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /dist /var/cfengine atum:/var/gvbackup/$(host)"

    (nile).!Sunday.Hr02_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local atum:/var/gvbackup/$(host)"

    ra.!Sunday.Hr02_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron /var/www/htdocs /var/www/php  /var/gv/db_backup atum:/var/gvbackup/$(host)"

    cairo.!Sunday.Hr02_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron /var/gv/db_backup atum:/var/gvbackup/$(host)"

    (seadev4|server1).!Sunday.Hr03_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /dist /usr/local atum:/var/gvbackup/$(host)"

    (horus|osiris2|osiris3|potato|seth|spool1).!Sunday.Hr03_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    # /chroot gets the named config
    osiris.!Sunday.Hr03_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    kale.!Sunday.Hr03_Q3::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    (fig|cherry).!Sunday.Hr04_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /var/spool/cron atum:/var/gvbackup/$(host)"

    bean.!Sunday.Hr04_Q1::
    "/usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete  /etc /usr/local /home/kevinr  atum:/var/gvbackup/$(host)"

    ####weekly rsync to nut

    nut.Sunday.Hr00_Q1::
    "/bin/date
    /usr/bin/rsync -ae 'ssh -i /root/.ssh/backup_key' --delete atum:/var/gvbackup/ /var/gvbackup
    /bin/date"

    ################################################
    # webservers should install any new software
    ################################################

    ra|kale::
	"/usr/bin/make -f Makefile standalone"
						chdir=/dist/src/thirdparty/apg-2.2.3

	"/usr/bin/make -f Makefile install"
						chdir=/dist/src/thirdparty/apg-2.2.3

#	"/usr/bin/make -f Makefile install"
#						chdir=$(perlroot)/Database


    ################################################
    # spoolers should install any new reports
    ################################################

    production.spooler::
	"/usr/bin/make install" 		chdir=/dist/reports

	"/usr/bin/crontab /dist/crontab.txt -u gv"

tidy:

    $(workdir)/outputs   
        pattern=*
	age=10
	recurse=1

    slackware::
    /etc/cron.daily
        pattern=netdate
	age=0
        recurse=1

disable:

editfiles:

    { $(cronroot)/root
    AppendIfNoSuchLine "0,30 * * * * /usr/sbin/cfexecd -F" }

    { /etc/ntp.conf
    BeginGroupIfNoLineContaining "restrict time nomodify" 
    DeleteLinesNotContaining "driftfile"
    Append "server time"
    Append "restrict time nomodify"
    Append "restrict localhost"
    DefineInGroup "ntp_edit"
    EndGroup }

    { $(aliases) 
    BeginGroupIfNoLineMatching "root: \root, admin@gotvoice.com"
    DeleteLinesContaining "root: "
    Append "root: \root, admin@gotvoice.com"
    EndGroup
    DefineClasses "aliases_edit" }

#    change encrypted passwords in /etc/shadow
    { /etc/shadow 
    ForEachLineIn "/tmp/shadow"
    ReplaceLinesMatchingField "1"
    EndLoop
    } 

processes:
    "ntpd"
        restart "/usr/sbin/ntpdate pool.ntp.org; /usr/sbin/ntpd"
	inform=true

    ntp_edit::
    "ntpd" signal=hup

    cfengine_server::
     "cfservd"
	restart "/usr/sbin/cfservd" 
	inform=true

    sw_raid::
    "mdadm --monitor"
        restart "/sbin/mdadm --monitor -m root --scan &"

    nagios::
    "nagios"
      restart "/etc/rc.d/rc.nagios start"
      inform=true

# notes: to do --
# webservers need perl modules installed to site_perl etc.
# should also sync up the httpd.conf (for /var/www/htdocs/messages browsing).
# the gvrjob binary.
# the NFS mounts and logfile links for gvadmin website
# gvweb.conf and mysql changes -- how to check?
# restart apache if change
# setuserid, permissions
# symlinks
# crontab
# backup scripts
# 
# spoolers:
# in.gvjd and iaxcall and spooler bits
# spooler -- restart if change   
# symlinks
# setuserid / permissions
# DONE: crontab
# DONE: gotvoice.conf, rc.gvspool, etc
# DONE: reports
#
# asterisk:
# /etc/asterisk files (extensions and voicemail.conf) ?
#
# all servers:
# DONE: resolv.conf, sendmail.cf, logrotate, netdate
# restart of sendmail
# 
#

